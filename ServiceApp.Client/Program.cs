using Blazored.LocalStorage;
using Microsoft.AspNetCore.Components.Authorization;
using Microsoft.AspNetCore.Components.Web;
using Microsoft.AspNetCore.Components.WebAssembly.Hosting;
using ServiceApp.Client;
using ServiceApp.Client.Services;
using ServiceApp.Client.Utility;
using MudBlazor.Services;
using ServiceApp.Shared.Model;
using ServiceApp.Shared.Model.Services.Accounting;
using ServiceApp.Shared.Model.Services.Accounting.SubServices;

var builder = WebAssemblyHostBuilder.CreateDefault(args);
builder.RootComponents.Add<App>("#app");
builder.RootComponents.Add<HeadOutlet>("head::after");
builder.Services.AddBlazoredLocalStorage();
builder.Services.AddAuthorizationCore();
builder.Services.AddScoped<AuthenticationStateProvider, UserAuthenticationStateprovider>();
builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });
builder.Services.AddScoped<IAuthService, AuthService>();
builder.Services.AddSingleton<ClientInfo>();
builder.Services.AddSingleton<IAccounting, Accounting>();
builder.Services.AddSingleton<IFilingOfTaxes, FilingOfTaxes>();
builder.Services.AddSingleton<IBIRRegistration, BIRRegistration>();
builder.Services.AddSingleton<IITRPreparation, ITRPreparation>();
builder.Services.AddSingleton<IDTIRegistration, DTIRegistration>();
builder.Services.AddSingleton<ISECRegistration, SECRegistration>();
builder.Services.AddSingleton<IBusinessPermit, BusinessPermit>();
builder.Services.AddSingleton<IPagIbigRegistration, PagIbigRegistration>();
builder.Services.AddSingleton<ISSSRegistration, SSSRegistration>();
builder.Services.AddSingleton<IPhilhealthRegistration, PhilhealthRegistration>();
builder.Services.AddSingleton<IBookkeeping, Bookkeeping>();

builder.Services.AddMudServices();
await builder.Build().RunAsync();
